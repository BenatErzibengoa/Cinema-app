
@startuml
class User{
  -id: int
  -email: String
  -password: String
  -name: String
  -surname: String

}

class Customer{
  -points: int
  -totalBalance: double
}

class Worker{
    -salary: double
}

class Admin{
}

class Cinema{
    -name: String
    -address: String
    -phoneNumber: int
    -openingTime: LocalTime
    -closingTime: LocalTime
}

class PurchaseReceipt{
  -orderDate: Date
  -/totalAmount: double
}

class Schedule{
  -date: LocalDate
  -/openingTime: LocalTime
  -/closingTime: LocalTime
  -size: int
  -schedule: boolean[]
}

class FoodOrder{
  -pricePerUnit: double
}

class ScreeningRoom{
  -roomNumber: int
}

class ShowTime{
  -screeningDate: LocalDate
  -screeningTime: LocalTime
}

class Film{
  -title: String
  -director: String
  -duration: LocalTime
  -description: String
}

class Review{
  -reviewId: int
  -opinion: String
  -rating: int
}

class Seat{
  -row: int
  -seatNum: int
  -price: double
}

class Quantity{
  -quantity: int
}

enum Genre{
  Action
  Adventure
  Animated
  Comedy
  Drama
  Fantasy
  Historical
  Horror
  Musical
  Romance
  Science Fiction
  Thriller
  Western
}

enum OrderStatus{
  Reserved
  Completed
  Cancelled
}

enum Food{
  SmallPopCorn
  MediumPopCorn
  LargePopCorn
  SmallSoda
  MediumSoda
  LargeSoda
  Nachos
  Candy
}

enum SeatType{
  Normal
  Comfortable
  Premium
}

User <|-- Customer: is a
User <|-- Worker: is a
Worker<|-- Admin: is a

Customer "1" -- "*" PurchaseReceipt: has >
Cinema "1" -- "*" ScreeningRoom: has >
Cinema "1" -- "1" Admin: has
Cinema "1" -- "*" Worker: has >

ScreeningRoom "1" -- "*" Schedule
ShowTime "*" -- "*" Seat: has >
ShowTime "*" -- "1" Schedule

Seat "*" -- "1" SeatType: of >
ShowTime "*" -- "1" Film: shows >
Film "1" -- "*" Review: has >
Film "*" -- "*" Genre : categorized by >

PurchaseReceipt "*" -- "*" Seat: has >
PurchaseReceipt "*" -- "1" ShowTime: associated with >
PurchaseReceipt "*" -- "1" OrderStatus : has >
PurchaseReceipt "*" -- "*" FoodOrder: has >

FoodOrder "*" -- "1" Food: has >
(PurchaseReceipt, FoodOrder) .. Quantity
@enduml
