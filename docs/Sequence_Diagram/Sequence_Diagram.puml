@startuml
title Purchase ticket\nonline
hide footbox

actor Customer
participant UI
participant "BIFacadeImplementation" as BIF
participant "DataAcces" as DA
participant "db:\nEntityManager" as EM
participant "PurchaseReceipt" as PR
participant "ScreeningRoom" as SR
participant "showTime" as ST

UI -> BIF: getShowTimesByDate(today)
activate BIF
BIF -> DA: getShowTimesByDate(today)
activate DA
DA -> EM: createQuery Q1
activate EM
EM --> DA: List<ShowTimes>
deactivate EM
DA --> BIF: List<ShowTimes>
deactivate DA
BIF --> UI: List<ShowTimes>
deactivate BIF

loop for each showTime
  UI -> ST: getMovie()
  activate ST
  ST --> UI: return Movie
  deactivate ST
end loop

UI -> UI: Display\nFilms

Customer -> UI: select film
Customer -> UI: select Date
Customer -> UI: click on "Search Showtimes"

UI -> BIF: getShowTimes(film,date)
activate BIF
BIF -> DA: getShowTimes(film,date)
activate DA
DA -> EM: create query Q2
activate EM
EM --> DA: List<ShowTime>
deactivate EM
DA --> BIF: List<ShowTime>
deactivate DA
BIF --> UI: List<ShowTime>
deactivate BIF

UI -> UI: Display\nShowtimes

Customer -> UI: select showTime
UI -> ST: getSchedule().getScreeningRoom()
activate ST
ST --> UI: return ScreeningRoom
deactivate ST

UI -> SR: getSeats()
activate SR
SR --> UI: List<Seat>
deactivate SR

UI -> UI: Display Seats

Customer -> UI: select Seat/seats
Customer -> UI: click on buyTicket

UI -> BIF: createPurchaseReceipt\n(customer, showTime, selectedSeats)
activate BIF
BIF -> DA: createPurchaseReceipt\n(customer, showTime, selectedSeats)
activate DA
DA -> EM: begin Transaction
activate EM
DA -> PR: new PurchaseReceipt\n(customer, showTime, selectedSeats)
activate PR
PR --> EM: PurchaseReceipt created
EM --> DA: PurchaseReceipt created
deactivate PR

DA -> EM: persist(purchaseReceipt)
DA -> EM: commit Transaction
EM --> DA: Success
deactivate EM

DA --> BIF: Success
deactivate DA
BIF --> UI: Success
deactivate BIF

UI -> UI: Display\nPurchase Receipt\nand movie info
Customer -> UI: click on proceed with\npayment
UI -> UI: Success message

' Notes at the bottom in a line
note across #lightyellow
Precondition:
Customer is logged in.
Customer is on Browse movies page.
end note

note across #lightyellow
Note:
The "UI" participant represents all user interface components (controllers, views, and UI state).
The abstraction is made for simplicity and clarity.
end note

note across #lightyellow
Note:
Sequence diagram for "Purchase Tickets Online" assuming snacks were not ordered.
"Order Snacks" use case is not included here.
end note

note across #lightyellow
Q1:
SELECT s FROM ShowTime s
WHERE s.screeningDate = ?1
Parameter: 1.Today's date
end note

note across #lightyellow
Q2:
SELECT s FROM ShowTime s
WHERE s.screeningDate = ?1
AND s.film = ?2
Parameters:
1. Selected date
2. Film
end note

@enduml